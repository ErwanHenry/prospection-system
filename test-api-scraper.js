#!/usr/bin/env node

require('dotenv').config();

async function testApiScraper() {
  console.log('üß™ TEST DU SCRAPER LINKEDIN API');
  console.log('='.repeat(50));
  
  const linkedinApiScraper = require('./backend/services/linkedinApiScraper');
  
  try {
    // Test d'initialisation
    console.log('\n1Ô∏è‚É£ Test d\'initialisation...');
    const initialized = await linkedinApiScraper.initialize();
    
    if (!initialized) {
      console.log('‚ùå √âchec de l\'initialisation');
      return;
    }
    
    console.log('‚úÖ Initialisation r√©ussie !');
    
    // Test de recherche
    console.log('\n2Ô∏è‚É£ Test de recherche...');
    const searchQuery = 'software engineer';
    const results = await linkedinApiScraper.search(searchQuery, 5);
    
    console.log(`‚úÖ Recherche termin√©e: ${results.length} r√©sultats`);
    
    if (results.length > 0) {
      console.log('\nüìã Profils trouv√©s:');
      results.forEach((profile, index) => {
        console.log(`   ${index + 1}. ${profile.name}`);
        console.log(`      Titre: ${profile.title || 'Non sp√©cifi√©'}`);
        console.log(`      Entreprise: ${profile.company || 'Non sp√©cifi√©e'}`);
        console.log(`      URL: ${profile.linkedinUrl}`);
        console.log(`      M√©thode: ${profile.method}`);
        console.log('');
      });
      
      console.log('üéâ LE SCRAPER API FONCTIONNE !');
    } else {
      console.log('‚ö†Ô∏è Aucun r√©sultat trouv√©');
    }
    
    // Test de sant√©
    console.log('\n3Ô∏è‚É£ Test de sant√©...');
    const health = await linkedinApiScraper.healthCheck();
    console.log('‚úÖ √âtat de sant√©:', JSON.stringify(health, null, 2));
    
  } catch (error) {
    console.error('‚ùå Erreur lors du test:', error.message);
  } finally {
    await linkedinApiScraper.close();
    console.log('üßπ Nettoyage termin√©');
  }
}

testApiScraper().catch(console.error);